<Application x:Class="Beutl.App"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:aconverters="using:Avalonia.Markup.Xaml.Converters"
             xmlns:convert="using:Beutl.Converters"
             xmlns:local="using:Beutl"
             xmlns:sty="using:FluentAvalonia.Styling"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceInclude Source="avares://Avalonia.Themes.Fluent/Controls/ContextMenu.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <convert:PixelSizeConverter x:Key="PixelSizeConverter" />
            <convert:TimeSpanToDoubleConverter x:Key="TimeSpanToDoubleConverter" />
            <aconverters:ColorToBrushConverter x:Key="ColorToBrushConverter" />

            <ControlTheme x:Key="LabelTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
            </ControlTheme>

            <KeyGesture x:Key="CreateNewProjectKeyGesture">Ctrl+Shift+N</KeyGesture>
            <KeyGesture x:Key="CreateNewKeyGesture">Ctrl+N</KeyGesture>
            <KeyGesture x:Key="OpenProjectKeyGesture">Ctrl+Shift+O</KeyGesture>
            <KeyGesture x:Key="OpenKeyGesture">Ctrl+O</KeyGesture>
            <KeyGesture x:Key="SaveAllKeyGesture">Ctrl+Shift+S</KeyGesture>
            <KeyGesture x:Key="SaveKeyGesture">Ctrl+S</KeyGesture>
            <KeyGesture x:Key="ExitKeyGesture">Alt+F4</KeyGesture>
            <KeyGesture x:Key="UndoKeyGesture">Ctrl+Z</KeyGesture>
            <KeyGesture x:Key="RedoKeyGesture">Ctrl+Y</KeyGesture>
            <KeyGesture x:Key="DeleteKeyGesture">Delete</KeyGesture>
            <KeyGesture x:Key="CutKeyGesture">Ctrl+X</KeyGesture>
            <KeyGesture x:Key="CopyKeyGesture">Ctrl+C</KeyGesture>
            <KeyGesture x:Key="PasteKeyGesture">Ctrl+V</KeyGesture>
            <KeyGesture x:Key="PlayPauseKeyGesture">Space</KeyGesture>
            <KeyGesture x:Key="NextKeyGesture">Right</KeyGesture>
            <KeyGesture x:Key="PreviousKeyGesture">Left</KeyGesture>
            <KeyGesture x:Key="StartKeyGesture">Home</KeyGesture>
            <KeyGesture x:Key="EndKeyGesture">End</KeyGesture>
            <KeyGesture x:Key="LayerDeleteKeyGesture">Ctrl+Delete</KeyGesture>
        </ResourceDictionary>
    </Application.Resources>
    <Application.Styles>
        <sty:FluentAvaloniaTheme />
        <StyleInclude Source="avares://FluentAvalonia.UI.Windowing/Styles/FAWindowingStyles.axaml" />

        <StyleInclude Source="avares://Beutl.Controls/Styles.axaml" />

        <Style Selector="TextBlock.ErrorTextBlockStyle">
            <Setter Property="Foreground" Value="{DynamicResource SystemFillColorCriticalBrush}" />
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style Selector="TextBlock.error">
            <Setter Property="Foreground" Value="{DynamicResource SystemFillColorCriticalBrush}" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style Selector="Button.breadcrumb">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />

            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Transitions">
                    <Transitions />
                </Setter>
            </Style>

            <Style Selector="^:pointerover /template/ Border#BorderElement">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForeground}" />
            </Style>

            <Style Selector="^:pointerover /template/ Border#BorderElement">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForeground}" />
                <Setter Property="Opacity" Value="0.5" />
            </Style>
        </Style>

        <Style Selector="Button.simple">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
            <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundPressed}" />

            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Transitions">
                    <Transitions />
                </Setter>
            </Style>

            <Style Selector="^:pointerover /template/ Border#BorderElement">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForeground}" />
            </Style>

            <Style Selector="^:pointerover /template/ Border#BorderElement">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForeground}" />
                <Setter Property="Opacity" Value="0.5" />
            </Style>
        </Style>

        <Style Selector="Label.breadcrumb">
            <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Content" Value="&#xE974;" />
        </Style>

        <Style Selector="TextBlock.breadcrumb">
            <Setter Property="FontFamily" Value="{DynamicResource XamlAutoFontFamily}" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="ClipToBounds" Value="False" />
        </Style>

        <Style Selector="ui|CommandBar /template/ ItemsControl#PrimaryItemsControl">
            <Setter Property="HorizontalAlignment" Value="{Binding ItemsAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        </Style>
    </Application.Styles>
</Application>
