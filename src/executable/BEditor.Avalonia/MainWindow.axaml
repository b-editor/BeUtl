<views:FluentWindow
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prop="clr-namespace:BEditor.Properties"
    xmlns:views="using:BEditor.Views"
    xmlns:vm="using:BEditor.ViewModels"
    xmlns:command="clr-namespace:BEditor.Command;assembly=BEditor.Core"
    xmlns:data="clr-namespace:BEditor.Data;assembly=BEditor.Core"
    xmlns:primitive="clr-namespace:BEditor.Primitive;assembly=BEditor.Primitive"
    xmlns:titlebar="using:BEditor.Views.CustomTitlebars"
    xmlns:ctr="using:BEditor.Controls"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
    mc:Ignorable="d"
    d:DesignWidth="1440"
    d:DesignHeight="760"
    x:DataType="vm:MainWindowViewModel"
    Background="{StaticResource NavigationViewDefaultPaneBackground}"
    DataContext="{x:Static vm:MainWindowViewModel.Current}"
    Focusable="True"
    x:Class="BEditor.MainWindow">
    <Grid RowDefinitions="Auto,Auto,*,Auto,*,Auto" ColumnDefinitions="425,Auto,*,Auto,2*">

        <titlebar:WindowsTitlebar
            Grid.Row="0"
            Grid.ColumnSpan="5"
            x:Name="Titlebar" />

        <Grid Margin="4" Grid.Row="1" Grid.ColumnSpan="5" ColumnDefinitions="Auto,*">
            <Grid.Styles>
                <Style Selector="Separator">
                    <Setter Property="Width" Value="1" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Background" Value="{DynamicResource AppBarSeparatorForeground}" />
                </Style>
                <Style Selector="ui|SymbolIcon">
                    <Setter Property="FontSize" Value="20" />
                </Style>
                <Style Selector="Button">
                    <Setter Property="Padding" Value="12,8" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="Button:disabled /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="ui|SplitButton">
                    <Setter Property="Padding" Value="12,8" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="ui|SplitButton:disabled">
                    <Setter Property="Background" Value="Transparent" />
                </Style>

                <Style Selector="PathIcon.objectmetadata">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Border
                                Padding="8"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{DynamicResource ControlCornerRadius}">
                                <Viewbox Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                    <Path Fill="{TemplateBinding Foreground}"
                                          Data="{TemplateBinding Data}"
                                          Stretch="Uniform" />
                                </Viewbox>
                            </Border>
                        </ControlTemplate>
                    </Setter>
                </Style>
                <Style Selector="PathIcon.objectmetadata:pointerover">
                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                </Style>

                <Style Selector="ComboBox">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="MinWidth" Value="100" />
                </Style>
                <Style Selector="ComboBox /template/ Border#Background">
                    <Setter Property="RenderTransform" Value="none" />
                    <Setter Property="Transitions">
                        <Transitions>
                            <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
                        </Transitions>
                    </Setter>
                </Style>
                <Style Selector="ComboBox:disabled /template/ Border#Background">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Style>
                <Style Selector="ComboBox:pointerover /template/ Border#Background">
                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="RenderTransform" Value="scale(0.98)" />
                </Style>
            </Grid.Styles>
            <StackPanel Spacing="4" Orientation="Horizontal">

                <Button Command="{CompiledBinding New, Mode=OneTime}" ToolTip.Tip="{x:Static prop:Strings.New}">
                    <ui:SymbolIcon Symbol="New" />
                </Button>

                <Button Command="{CompiledBinding Open, Mode=OneTime}" ToolTip.Tip="{x:Static prop:Strings.Open}">
                    <ui:SymbolIcon Symbol="Open" />
                </Button>

                <ui:SplitButton
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Command="{CompiledBinding Save, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.Save}">
                    <ui:SplitButton.Flyout>
                        <ui:MenuFlyout>
                            <ui:MenuFlyoutItem
                                Icon="Save"
                                Text="{x:Static prop:Strings.Save}"
                                Command="{CompiledBinding Save, Mode=OneTime}" />

                            <ui:MenuFlyoutItem
                                Icon="SaveAsCopy"
                                Text="{x:Static prop:Strings.SaveAs}"
                                Command="{CompiledBinding SaveAs, Mode=OneTime}" />
                        </ui:MenuFlyout>
                    </ui:SplitButton.Flyout>
                    <ui:SymbolIcon Symbol="Save" />
                </ui:SplitButton>

                <Separator/>

                <Button
                    IsEnabled="{CompiledBinding Source={x:Static command:CommandManager.Default}, Path=CanUndo, Mode=OneWay}"
                    Command="{CompiledBinding Undo, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.Undo}">
                    <ui:SymbolIcon Symbol="Undo" />
                </Button>

                <Button
                    IsEnabled="{CompiledBinding Source={x:Static command:CommandManager.Default}, Path=CanRedo, Mode=OneWay}"
                    Command="{CompiledBinding Redo, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.Redo}">
                    <ui:SymbolIcon Symbol="Redo" />
                </Button>

                <Separator/>

                <Button
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Command="{CompiledBinding Cut, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.Cut}">
                    <ui:SymbolIcon Symbol="Cut" />
                </Button>

                <Button
                  IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                  Command="{CompiledBinding Copy, Mode=OneTime}"
                  ToolTip.Tip="{x:Static prop:Strings.Copy}">
                    <ui:SymbolIcon Symbol="Copy" />
                </Button>

                <Button
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Command="{CompiledBinding Paste, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.Paste}">
                    <ui:SymbolIcon Symbol="Paste" />
                </Button>

                <Separator/>

                <ComboBox
                    VerticalAlignment="Center"
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Items="{CompiledBinding App.Project.SceneList, Mode=OneWay}"
                    SelectedItem="{Binding App.Project.CurrentScene, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="8,0" Text="{Binding SceneName, Mode=OneWay}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Separator/>

                <ItemsControl Items="{Binding Source={x:Static data:ObjectMetadata.LoadedObjects}, Converter={StaticResource EnumerableTakeConverter}, ConverterParameter=8}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <PathIcon
                                PointerPressed="ObjectStartDrag"
                                Foreground="{Binding AccentColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneTime}"
                                Classes="objectmetadata"
                                Data="{Binding PathIcon, Mode=OneTime, Converter={StaticResource StringToGeometoryConverter}}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Spacing="4"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <Button Click="ObjectsPopupOpen">
                    <ui:SymbolIcon Symbol="MoreVertical" />
                </Button>

                <Popup WindowManagerAddShadowHint="False" x:Name="ObjectsPopup" StaysOpen="False" PlacementMode="Pointer">
                    <Border
                        BorderBrush="{StaticResource ControlElevationBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="{StaticResource OverlayCornerRadius}"
                        Background="{StaticResource NavigationViewDefaultPaneBackground}">

                        <ItemsControl Items="{Binding Source={x:Static data:ObjectMetadata.LoadedObjects}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid
                                        ColumnDefinitions="Auto,Auto"
                                        Height="32"
                                        PointerPressed="ObjectStartDrag">
                                        <Grid.Styles>
                                            <Style Selector="Grid">
                                                <Setter Property="Background" Value="Transparent" />
                                            </Style>
                                            <Style Selector="Grid:pointerover">
                                                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
                                            </Style>
                                            <Style Selector="PathIcon">
                                                <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Height" Value="{DynamicResource IconElementThemeHeight}" />
                                                <Setter Property="Width" Value="{DynamicResource IconElementThemeWidth}" />
                                                <Setter Property="Template">
                                                    <ControlTemplate>
                                                        <Border Background="{TemplateBinding Background}">
                                                            <Viewbox Height="{TemplateBinding Height}"
                                                                     Width="{TemplateBinding Width}">
                                                                <Path Fill="{TemplateBinding Foreground}"
                                                                      Data="{TemplateBinding Data}"
                                                                      Stretch="Uniform" />
                                                            </Viewbox>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter>
                                            </Style>
                                        </Grid.Styles>

                                        <PathIcon
                                            Margin="8"
                                            Foreground="{Binding AccentColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneTime}"
                                            Data="{Binding PathIcon, Mode=OneTime, Converter={StaticResource StringToGeometoryConverter}}" />

                                        <TextBlock Margin="8" Grid.Column="1" Text="{Binding Name, Mode=OneTime}"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </Popup>

                <Separator/>

                <Button
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Command="{CompiledBinding ImageOutput, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.ImageOutput}">
                    <ui:SymbolIcon Symbol="Camera" />
                </Button>

                <Button
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Command="{CompiledBinding VideoOutput, Mode=OneTime}"
                    ToolTip.Tip="{x:Static prop:Strings.VideoOutput}">
                    <ui:SymbolIcon Symbol="Video" />
                </Button>

            </StackPanel>

            <StackPanel HorizontalAlignment="Right" Grid.Column="1" Spacing="4" Orientation="Horizontal">
                <TextBlock
                    VerticalAlignment="Center"
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                    Text="{Binding App.Project.CurrentScene.PreviewFrame, Mode=OneWay, Converter={StaticResource FrameToTimeConverter}}" />

                <Button Click="ShowNotifications" Padding="0">
                    <Panel>
                        <ui:SymbolIcon Symbol="Alert" Margin="8" />

                        <Border
                            IsVisible="{CompiledBinding NoticeIsVisible.Value, Mode=OneWay}"
                            Background="{StaticResource InfoBarErrorSeverityIconBackground}"
                            CornerRadius="16"
                            Width="16"
                            Height="16"
                            Margin="4"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right">
                            <TextBlock
                                Foreground="{StaticResource InfoBarErrorSeverityIconForeground}"
                                Text="{CompiledBinding NoticeCount.Value, Mode=OneWay}"
                                FontSize="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </Panel>
                </Button>

                <Popup WindowManagerAddShadowHint="False" x:Name="NotificationsPopup" StaysOpen="False">
                    <Border
                        BorderBrush="{StaticResource ControlElevationBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="{StaticResource OverlayCornerRadius}"
                        Background="{StaticResource NavigationViewDefaultPaneBackground}">

                        <StackPanel Orientation="Vertical" Spacing="8" x:Name="NotificationsPanel"/>
                    </Border>
                </Popup>

            </StackPanel>
        </Grid>

        <Grid
            Grid.Row="2"
            Grid.RowSpan="3"
            ColumnDefinitions="Auto,*">
            <!--<StackPanel Spacing="8">
                <StackPanel.Styles>
                    <Style Selector="Button">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </StackPanel.Styles>
                <LayoutTransformControl>
                    <LayoutTransformControl.LayoutTransform>
                        <RotateTransform Angle="270" />
                    </LayoutTransformControl.LayoutTransform>
                    <Button Content="AAA" />
                </LayoutTransformControl>
                <LayoutTransformControl>
                    <LayoutTransformControl.LayoutTransform>
                        <RotateTransform Angle="270" />
                    </LayoutTransformControl.LayoutTransform>
                    <Button Content="BBB" />
                </LayoutTransformControl>
            </StackPanel>-->

            <Border
                Grid.Column="1"
                Margin="4,0,0,4"
                Classes="card"
                IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                Child="{Binding App.Project.CurrentScene.SelectItem, Converter={StaticResource ClipPropertyConverter}, Mode=OneWay}">
            </Border>
        </Grid>

        <GridSplitter Background="Transparent" Grid.Row="2" Grid.RowSpan="3" Grid.Column="1"/>

        <Border
            Margin="0,0,4,4"
            Classes="card"
            Grid.Row="4"
            Grid.Column="2"
            Grid.ColumnSpan="4"
            Padding="0">
            <Grid ColumnDefinitions="*,Auto">
                <ContentControl
                    Content="{Binding App.Project.CurrentScene, Converter={StaticResource SceneToTimelineConverter}, Mode=OneWay}"
                    IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"/>

                <views:VolumeView Grid.Column="1" />
            </Grid>
        </Border>

        <GridSplitter Background="Transparent" Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="3"/>

        <!--例外がスローされる-->
        <views:Previewer
            x:Name="previewer"
            DataContext="{CompiledBinding Previewer, Mode=OneTime}"
            Grid.Row="2"
            Grid.Column="4"/>

        <GridSplitter Background="Transparent" Grid.Row="2" Grid.Column="3"/>

        <TabControl
            Grid.Row="2"
            Grid.Column="2"
            Padding="0"
            Margin="0,-4">
            <TabControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </TabControl.ItemsPanel>
            <TabItem
                Header="{x:Static prop:Strings.Library}"
                FontSize="16"
                Padding="8" >
                <views:Library x:Name="Library" />
            </TabItem>
            <TabItem
                IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                Header="{x:Static prop:Strings.Objects}"
                FontSize="16"
                Padding="8" >
                <views:ObjectViewer />
            </TabItem>
            <TabItem
                IsEnabled="{CompiledBinding IsOpened.Value, Mode=OneWay}"
                Header="{x:Static prop:Strings.Configuration}"
                FontSize="16"
                Padding="8" >
                <views:Configuration />
            </TabItem>
        </TabControl>

        <StackPanel
            Spacing="8"
            Orientation="Vertical"
            Margin="8"
            Grid.RowSpan="6"
            Grid.ColumnSpan="5"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            x:Name="Notifications">
        </StackPanel>
    </Grid>
</views:FluentWindow>
