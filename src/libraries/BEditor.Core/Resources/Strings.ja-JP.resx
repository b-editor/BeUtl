<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UnknownCommand" xml:space="preserve">
    <value>不明なコマンド</value>
  </data>
  <data name="Ambient" xml:space="preserve">
    <value>環境</value>
  </data>
  <data name="Blend" xml:space="preserve">
    <value>合成</value>
  </data>
  <data name="CenterX" xml:space="preserve">
    <value>中心X</value>
  </data>
  <data name="CenterY" xml:space="preserve">
    <value>中心Y</value>
  </data>
  <data name="CenterZ" xml:space="preserve">
    <value>中心Z</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>色</value>
  </data>
  <data name="Coordinate" xml:space="preserve">
    <value>座標</value>
  </data>
  <data name="Diffuse" xml:space="preserve">
    <value>拡散</value>
  </data>
  <data name="FailedToLoad" xml:space="preserve">
    <value>{0} の読み込みに失敗しました。</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>フォント</value>
  </data>
  <data name="Material" xml:space="preserve">
    <value>マテリアル</value>
  </data>
  <data name="Opacity" xml:space="preserve">
    <value>不透明度</value>
  </data>
  <data name="ProjectFile" xml:space="preserve">
    <value>プロジェクトファイル</value>
  </data>
  <data name="Rotate" xml:space="preserve">
    <value>回転</value>
  </data>
  <data name="RotateX" xml:space="preserve">
    <value>回転X</value>
  </data>
  <data name="RotateY" xml:space="preserve">
    <value>回転Y</value>
  </data>
  <data name="RotateZ" xml:space="preserve">
    <value>回転Z</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>スケール</value>
  </data>
  <data name="Shininess" xml:space="preserve">
    <value>輝き</value>
  </data>
  <data name="Specular" xml:space="preserve">
    <value>鏡面反射</value>
  </data>
  <data name="Z" xml:space="preserve">
    <value>Z</value>
  </data>
  <data name="Y" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="X" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="ChildElementsNotFound" xml:space="preserve">
    <value>子要素が見つかりませんでした。</value>
  </data>
  <data name="FailedToConvertValue" xml:space="preserve">
    <value>値を変換できませんでした。</value>
  </data>
  <data name="KeyHasAlreadyBeenRegisterd" xml:space="preserve">
    <value>このキーは既に登録済みです。</value>
  </data>
  <data name="ParentElementNotFound" xml:space="preserve">
    <value>親要素が見つかりませんでした。</value>
  </data>
  <data name="TheValueWasNotTypeButType" xml:space="preserve">
    <value>値は{0}型ではなく、{1}型でした。</value>
  </data>
  <data name="AddClip" xml:space="preserve">
    <value>クリップを追加</value>
  </data>
  <data name="AddEffect" xml:space="preserve">
    <value>エフェクトを追加</value>
  </data>
  <data name="AddKeyframe" xml:space="preserve">
    <value>キーフレームを追加</value>
  </data>
  <data name="BindCommand" xml:space="preserve">
    <value>プロパティの値をバインド</value>
  </data>
  <data name="ChangeColor" xml:space="preserve">
    <value>色を変更</value>
  </data>
  <data name="ChangeEasing" xml:space="preserve">
    <value>イージングを変更</value>
  </data>
  <data name="ChangeFile" xml:space="preserve">
    <value>ファイルを変更</value>
  </data>
  <data name="ChangeFolder" xml:space="preserve">
    <value>フォルダーを変更</value>
  </data>
  <data name="ChangeFont" xml:space="preserve">
    <value>フォントを変更</value>
  </data>
  <data name="ChangeIsChecked" xml:space="preserve">
    <value>チェックボックスの状態を変更</value>
  </data>
  <data name="ChangeLength" xml:space="preserve">
    <value>長さを変更</value>
  </data>
  <data name="ChangeSelectItem" xml:space="preserve">
    <value>選択中のアイテムを変更</value>
  </data>
  <data name="ChangeText" xml:space="preserve">
    <value>テキストを変更</value>
  </data>
  <data name="ChangeValue" xml:space="preserve">
    <value>値を変更</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>プロパティの値を切断</value>
  </data>
  <data name="DownEffect" xml:space="preserve">
    <value>エフェクトの順番を変更 (下)</value>
  </data>
  <data name="EnableDisableEffect" xml:space="preserve">
    <value>エフェクトを有効化/無効化</value>
  </data>
  <data name="MoveClip" xml:space="preserve">
    <value>クリップを移動</value>
  </data>
  <data name="MoveKeyframe" xml:space="preserve">
    <value>キーフレームを移動エフェクトを有効化/無効化</value>
  </data>
  <data name="RemoveClip" xml:space="preserve">
    <value>クリップを移動</value>
  </data>
  <data name="RemoveEffect" xml:space="preserve">
    <value>エフェクトを削除</value>
  </data>
  <data name="RemoveKeyframe" xml:space="preserve">
    <value>キーフレームを削除</value>
  </data>
  <data name="RemoveLayer" xml:space="preserve">
    <value>レイヤーを削除</value>
  </data>
  <data name="SplitClip" xml:space="preserve">
    <value>クリップを分割</value>
  </data>
  <data name="UpEffect" xml:space="preserve">
    <value>エフェクトの順番を変更 (上)</value>
  </data>
  <data name="TheOwnerTypeDoesNotMatch" xml:space="preserve">
    <value>プロパティのオーナーの型とこのオブジェクトの型が一致しません。</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>音量</value>
  </data>
  <data name="Pitch" xml:space="preserve">
    <value>ピッチ</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>開始フレーム</value>
  </data>
  <data name="FailedToRemove" xml:space="preserve">
    <value>削除に失敗しました。</value>
  </data>
  <data name="AlphaBlend" xml:space="preserve">
    <value>アルファブレンド</value>
  </data>
  <data name="Additive" xml:space="preserve">
    <value>加算</value>
  </data>
  <data name="Subtract" xml:space="preserve">
    <value>減算</value>
  </data>
  <data name="Multiplication" xml:space="preserve">
    <value>乗算</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>種類</value>
  </data>
  <data name="Primitive" xml:space="preserve">
    <value>プリミティブ</value>
  </data>
  <data name="UpdatePosition" xml:space="preserve">
    <value>位置を更新</value>
  </data>
  <data name="KeyframeHasBeenMovedOutOfRange" xml:space="preserve">
    <value>キーフレームが範囲外に移動しています。
{0} -&gt; {1}</value>
  </data>
  <data name="MessageBy" xml:space="preserve">
    <value>{0} によるメッセージ</value>
  </data>
  <data name="RemoveTarget" xml:space="preserve">
    <value>対象を削除</value>
  </data>
  <data name="AddGradient" xml:space="preserve">
    <value>グラデーションを追加</value>
  </data>
  <data name="RemoveGradient" xml:space="preserve">
    <value>グラデーションを削除</value>
  </data>
  <data name="ChangeGradient" xml:space="preserve">
    <value>グラデーションを変更</value>
  </data>
</root>