<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BEditor.Graphics</name>
    </assembly>
    <members>
        <member name="T:BEditor.Graphics.Ball">
            <summary>
            Represents an ball.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Ball.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Ball"/> class.
            </summary>
            <param name="radiusX">The radius of the ball in the X-axis direction.</param>
            <param name="radiusY">The radius of the ball in the Y-axis direction.</param>
            <param name="radiusZ">The radius of the ball in the Z-axis direction.</param>
            <exception cref="T:BEditor.Graphics.GraphicsException">Platform is not set.</exception>
        </member>
        <member name="P:BEditor.Graphics.Ball.RadiusX">
            <summary>
            Gets the radius of this <see cref="T:BEditor.Graphics.Ball"/> in the X-axis direction.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Ball.RadiusY">
            <summary>
            Gets the radius of this <see cref="T:BEditor.Graphics.Ball"/> in the Y-axis direction.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Ball.RadiusZ">
            <summary>
            Gets the radius of this <see cref="T:BEditor.Graphics.Ball"/> in the Z-axis direction.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.Camera">
            <summary>
            Represents an OpenGL camera.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Camera.#ctor(System.Numerics.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Camera"/> class.
            </summary>
            <param name="position">The position of the camera.</param>
        </member>
        <member name="P:BEditor.Graphics.Camera.Position">
            <summary>
            Gets or sets the position of this <see cref="T:BEditor.Graphics.Camera"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Camera.Target">
            <summary>
            Gets or sets the target position of this <see cref="T:BEditor.Graphics.Camera"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Camera.Fov">
            <summary>
            Gets or sets the Degrees representing the Fov of this <see cref="T:BEditor.Graphics.Camera"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Camera.Near">
            <summary>
            Gets or sets the range to be drawn by this <see cref="T:BEditor.Graphics.Camera"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Camera.Far">
            <summary>
            Gets or sets the range to be drawn by this <see cref="T:BEditor.Graphics.Camera"/>.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Camera.GetViewMatrix">
            <summary>
            Gets the ViewMatrix.
            </summary>
            <returns>Returns the view matrix.</returns>
        </member>
        <member name="M:BEditor.Graphics.Camera.GetProjectionMatrix">
            <summary>
            Gets ProjectionMatrix.
            </summary>
            <returns>Returns the projection matrix.</returns>
        </member>
        <member name="T:BEditor.Graphics.Cube">
            <summary>
            Represents an cube.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Cube.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Cube"/> class.
            </summary>
            <param name="width">The width of the cube.</param>
            <param name="height">The height of the cube.</param>
            <param name="depth">The depth of the cube.</param>
            <exception cref="T:BEditor.Graphics.GraphicsException">Platform is not set.</exception>
        </member>
        <member name="P:BEditor.Graphics.Cube.Width">
            <summary>
            Gets the width of this <see cref="T:BEditor.Graphics.Cube"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Cube.Height">
            <summary>
            Gets the height of this <see cref="T:BEditor.Graphics.Cube"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Cube.Depth">
            <summary>
            Gets the depth of this <see cref="T:BEditor.Graphics.Cube"/>.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.Drawable">
            <summary>
            Represents the base class of drawable objects.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Drawable.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:BEditor.Graphics.Drawable"/> class.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Drawable.Color">
            <summary>
            Gets or sets the color of this <see cref="T:BEditor.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Drawable.Material">
            <summary>
            Gets or sets the material of this <see cref="T:BEditor.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Drawable.Transform">
            <summary>
            Gets or sets the transform of this <see cref="T:BEditor.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Drawable.RasterizerState">
            <summary>
            Gets or sets the rasterizer state.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Drawable.BlendMode">
            <summary>
            Gets or sets the blend mode of this <see cref="T:BEditor.Graphics.Drawable"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Drawable.IsDisposed">
            <summary>
            Gets a value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Drawable.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.Drawable.Synchronize(BEditor.Graphics.Drawable)">
            <summary>
            Synchronizes properties with other <see cref="T:BEditor.Graphics.Drawable"/>.
            </summary>
            <param name="drawable">The object to be synchronized.</param>
        </member>
        <member name="M:BEditor.Graphics.Drawable.Dispose(System.Boolean)">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="T:BEditor.Graphics.BlendMode">
            <summary>
            Defines the mode of the blend.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.BlendMode.AlphaBlend">
            <summary>
            The default.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.BlendMode.Additive">
            <summary>
            The additive.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.BlendMode.Subtract">
            <summary>
            The subtract.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.BlendMode.Multiplication">
            <summary>
            The multiplication.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.ComparisonKind">
            <summary>
            Describes how new values are compared with existing values in a depth or stencil comparison.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.Never">
            <summary>
            The comparison never succeeds.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.Less">
            <summary>
            The comparison succeeds when the new value is less than the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.Equal">
            <summary>
            The comparison succeeds when the new value is equal to the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.LessEqual">
            <summary>
            The comparison succeeds when the new value is less than or equal to the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.Greater">
            <summary>
            The comparison succeeds when the new value is greater than the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.NotEqual">
            <summary>
            The comparison succeeds when the new value is not equal to the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.GreaterEqual">
            <summary>
            The comparison succeeds when the new value is greater than or equal to the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.ComparisonKind.Always">
            <summary>
            The comparison always succeeds.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.FaceCullMode">
            <summary>
            Indicates which face will be culled.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.FaceCullMode.Back">
            <summary>
            The back face.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.FaceCullMode.Front">
            <summary>
            The front face.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.FaceCullMode.None">
            <summary>
            No face culling.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.FrontFace">
            <summary>
            The winding order used to determine the front face of a primitive.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.FrontFace.Clockwise">
            <summary>
            Clockwise winding order.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.FrontFace.CounterClockwise">
            <summary>
            Counter-clockwise winding order.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.PolygonFillMode">
            <summary>
            Indicates how the rasterizer will fill polygons.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.PolygonFillMode.Solid">
            <summary>
            Polygons are filled completely.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.PolygonFillMode.Wireframe">
            <summary>
            Polygons are outlined in a "wireframe" style.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.StencilOperation">
            <summary>
            Identifies an action taken on samples that pass or fail the stencil test.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.Keep">
            <summary>
            Keep the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.Zero">
            <summary>
            Sets the value to 0.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.Replace">
            <summary>
            Replaces the existing value with <see cref="P:BEditor.Graphics.DepthStencilState.StencilReference"/>.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.IncrementAndClamp">
            <summary>
            Increments the existing value and clamps it to the maximum representable unsigned value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.DecrementAndClamp">
            <summary>
            Decrements the existing value and clamps it to 0.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.Invert">
            <summary>
            Bitwise-inverts the existing value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.IncrementAndWrap">
            <summary>
            Increments the existing value and wraps it to 0 when it exceeds the maximum representable unsigned value.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.StencilOperation.DecrementAndWrap">
            <summary>
            Decrements the existing value and wraps it to the maximum representable unsigned value if it would be reduced below 0.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.GraphicsContext">
            <summary>
            Represents the graphics context.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.GraphicsContext"/> class.
            </summary>
            <param name="width">The width of the graphics context.</param>
            <param name="height">The height of the graphics context.</param>
            <exception cref="T:BEditor.Graphics.GraphicsException">Platform is not set.</exception>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.#ctor(BEditor.Graphics.Platform.IGraphicsContextImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.GraphicsContext"/> class.
            </summary>
            <param name="impl">The graphics context implementation.</param>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.Width">
            <summary>
            Gets the width of the frame buffer.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.Height">
            <summary>
            Gets the height of the frame buffer.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.IsDisposed">
            <summary>
            Gets a value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.Light">
            <summary>
            Gets or sets the light.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.DepthStencilState">
            <summary>
            Gets or sets the depth stencil state.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.GraphicsContext.PlatformImpl">
            <summary>
            Gets the graphics context implementation.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.SetSize(BEditor.Drawing.Size)">
            <summary>
            Sets the framebuffer size.
            </summary>
            <param name="size">The framebuffer size.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.Clear">
            <summary>
            Clears the framebuffer.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.DrawTexture(BEditor.Graphics.Texture)">
            <summary>
            Draws the texture into the frame buffer.
            </summary>
            <param name="texture">The texture to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.DrawCube(BEditor.Graphics.Cube)">
            <summary>
            Draws the cube into the frame buffer.
            </summary>
            <param name="cube">The cube to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.DrawBall(BEditor.Graphics.Ball)">
            <summary>
            Draws the ball into the frame buffer.
            </summary>
            <param name="ball">The ball to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.DrawLine(System.Numerics.Vector3,System.Numerics.Vector3,System.Single,BEditor.Graphics.Transform,BEditor.Drawing.Color)">
            <summary>
            Draws the line into the frame buffer.
            </summary>
            <param name="start">The starting coordinates of the line.</param>
            <param name="end">The ending coordinates of the line.</param>
            <param name="width">The width of the line.</param>
            <param name="transform">The transformation matrix for drawing the line.</param>
            <param name="color">The color of the line.</param>
            <exception cref="T:BEditor.Graphics.GraphicsException">Platform is not set.</exception>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.DrawLine(BEditor.Graphics.Line)">
            <summary>
            Draws the line into the frame buffer.
            </summary>
            <param name="line">The line to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.ReadImage(BEditor.Drawing.Image{BEditor.Drawing.Pixel.BGRA32})">
            <summary>
            Reads an image.
            </summary>
            <param name="image">The image to write the frame buffer pixels.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsContext.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Graphics.GraphicsException">
            <summary>
            Represents an exception that is raised when an error occurs using OpenGL.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.GraphicsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.GraphicsException"/> class.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.GraphicsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.GraphicsException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.GraphicsException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:BEditor.Graphics.GraphicsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.GraphicsException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="info"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null"/> or <see cref="P:System.Exception.HResult"/> is zero (0).</exception>
        </member>
        <member name="T:BEditor.Graphics.Light">
            <summary>
            Represents an OpenGL light.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Light.#ctor(System.Numerics.Vector3,BEditor.Drawing.Color,BEditor.Drawing.Color,BEditor.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Light"/> class.
            </summary>
            <param name="pos">The position of the lights.</param>
            <param name="ambient">The ambient color.</param>
            <param name="diffuse">The diffuse color.</param>
            <param name="specular">The specular color.</param>
        </member>
        <member name="P:BEditor.Graphics.Light.Ambient">
            <summary>
            Gets or sets the ambient color of this <see cref="T:BEditor.Graphics.Light"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Light.Diffuse">
            <summary>
            Gets or sets the diffuse color of this <see cref="T:BEditor.Graphics.Light"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Light.Specular">
            <summary>
            Gets or sets the specular color of this <see cref="T:BEditor.Graphics.Light"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Light.Position">
            <summary>
            Gets or sets the position of this <see cref="T:BEditor.Graphics.Light"/>.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.Line">
            <summary>
            Represents an line.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Line.#ctor(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Line"/> class.
            </summary>
            <param name="start">The start position of the line.</param>
            <param name="end">The end position of the line.</param>
            <param name="width">The width of the line.</param>
        </member>
        <member name="P:BEditor.Graphics.Line.Start">
            <summary>
            Gets the start position of this <see cref="T:BEditor.Graphics.Line"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Line.End">
            <summary>
            Gets the end position of this <see cref="T:BEditor.Graphics.Line"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Line.Width">
            <summary>
            Gets the width of this <see cref="T:BEditor.Graphics.Line"/>.
            </summary>
        </member>
        <member name="T:BEditor.Graphics.OrthographicCamera">
            <summary>
            Represents an orthographic camera.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.OrthographicCamera.#ctor(System.Numerics.Vector3,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.OrthographicCamera"/> class.
            </summary>
            <param name="position">The position of the camera.</param>
            <param name="width">The width of the view volume.</param>
            <param name="height">The height of the view volume.</param>
        </member>
        <member name="P:BEditor.Graphics.OrthographicCamera.Width">
            <summary>
            Gets or sets the width of the view volume.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.OrthographicCamera.Height">
            <summary>
            Gets or sets the height of the view volume.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.OrthographicCamera.GetProjectionMatrix">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Graphics.PerspectiveCamera">
            <summary>
            Represents the perspective camera.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.PerspectiveCamera.#ctor(System.Numerics.Vector3,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.PerspectiveCamera"/> class.
            </summary>
            <param name="position">The position of the camera.</param>
            <param name="aspectRatio">The aspect ratio of the camera's viewport.</param>
        </member>
        <member name="P:BEditor.Graphics.PerspectiveCamera.AspectRatio">
            <summary>
            Gets or sets the aspect ratio of the camera's viewport.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.PerspectiveCamera.GetProjectionMatrix">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Graphics.Platform.IGraphicsContextImpl">
            <summary>
            Defines a graphics context implementation.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IGraphicsContextImpl.Width">
            <summary>
            Gets the width of the frame buffer.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IGraphicsContextImpl.Height">
            <summary>
            Gets the height of the frame buffer.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IGraphicsContextImpl.IsDisposed">
            <summary>
            Gets a value indicating whether this instance has been disposed.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IGraphicsContextImpl.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IGraphicsContextImpl.Light">
            <summary>
            Gets or sets the light.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IGraphicsContextImpl.DepthStencilState">
            <summary>
            Gets or sets the depth stencil state.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.MakeCurrent">
            <summary>
            Makes current.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.SetSize(BEditor.Drawing.Size)">
            <summary>
            Sets the framebuffer size.
            </summary>
            <param name="size">The framebuffer size.</param>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.Clear">
            <summary>
            Clears the framebuffer.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.DrawTexture(BEditor.Graphics.Texture)">
            <summary>
            Draws the texture into the frame buffer.
            </summary>
            <param name="texture">The texture to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.DrawCube(BEditor.Graphics.Cube)">
            <summary>
            Draws the cube into the frame buffer.
            </summary>
            <param name="cube">The cube to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.DrawBall(BEditor.Graphics.Ball)">
            <summary>
            Draws the ball into the frame buffer.
            </summary>
            <param name="ball">The ball to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.DrawLine(BEditor.Graphics.Line)">
            <summary>
            Draws the line into the frame buffer.
            </summary>
            <param name="line">The line to be drawn.</param>
        </member>
        <member name="M:BEditor.Graphics.Platform.IGraphicsContextImpl.ReadImage(BEditor.Drawing.Image{BEditor.Drawing.Pixel.BGRA32})">
            <summary>
            Reads an image.
            </summary>
            <param name="image">The image to write the frame buffer pixels.</param>
        </member>
        <member name="T:BEditor.Graphics.Platform.IPlatform">
            <summary>
            Represents the platform.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Platform.IPlatform.Current">
            <summary>
            Gets or sets the current platform.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Platform.IPlatform.CreateContext(System.Int32,System.Int32)">
            <summary>
            Creates the graphics context.
            </summary>
            <param name="width">The width of the graphics context.</param>
            <param name="height">The height of the graphics context.</param>
            <returns>Returns the implementation created by this method.</returns>
        </member>
        <member name="T:BEditor.Graphics.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Resources.Strings.PlatformIsNotSet">
            <summary>
              Looks up a localized string similar to Platform is not set..
            </summary>
        </member>
        <member name="T:BEditor.Graphics.DepthStencilState">
            <summary>
            A <see cref="T:BEditor.Graphics.GraphicsContext"/> component describing the properties of the depth stencil state.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.DepthStencilState.DepthOnlyLessEqual">
            <summary>
            Describes a depth-only depth stencil state which uses a <see cref="F:BEditor.Graphics.ComparisonKind.LessEqual"/> comparison.
            The stencil test is disabled.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.DepthStencilState.DepthOnlyLessEqualRead">
            <summary>
            Describes a depth-only depth stencil state which uses a <see cref="F:BEditor.Graphics.ComparisonKind.LessEqual"/> comparison, and disables writing to the depth buffer.
            The stencil test is disabled.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.DepthStencilState.DepthOnlyGreaterEqual">
            <summary>
            Describes a depth-only depth stencil state which uses a <see cref="F:BEditor.Graphics.ComparisonKind.GreaterEqual"/> comparison.
            The stencil test is disabled.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.DepthStencilState.DepthOnlyGreaterEqualRead">
            <summary>
            Describes a depth-only depth stencil state which uses a <see cref="F:BEditor.Graphics.ComparisonKind.GreaterEqual"/> comparison, and
            disables writing to the depth buffer. The stencil test is disabled.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.DepthStencilState.Disabled">
            <summary>
            Describes a depth-only depth stencil state in which depth testing and writing is disabled.
            The stencil test is disabled.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.#ctor(System.Boolean,System.Boolean,BEditor.Graphics.ComparisonKind)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.DepthStencilState"/> struct.
            </summary>
            <param name="depthTestEnabled">Whether depth testing is enabled.</param>
            <param name="depthWriteEnabled">Whether new depth values are written to the depth buffer.</param>
            <param name="comparisonKind">The <see cref="T:BEditor.Graphics.ComparisonKind"/> used when considering new depth values.</param>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.#ctor(System.Boolean,System.Boolean,BEditor.Graphics.ComparisonKind,System.Boolean,BEditor.Graphics.StencilBehavior,BEditor.Graphics.StencilBehavior,System.Byte,System.Byte,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.DepthStencilState"/> struct.
            </summary>
            <param name="depthTestEnabled">Whether depth testing is enabled.</param>
            <param name="depthWriteEnabled">Whether new depth values are written to the depth buffer.</param>
            <param name="comparisonKind">The <see cref="T:BEditor.Graphics.ComparisonKind"/> used when considering new depth values.</param>
            <param name="stencilTestEnabled">Whether the stencil test is enabled.</param>
            <param name="stencilFront">How stencil tests are handled for pixels whose surface faces towards the camera.</param>
            <param name="stencilBack">How stencil tests are handled for pixels whose surface faces away from the camera.</param>
            <param name="stencilReadMask">The portion of the stencil buffer used for reading.</param>
            <param name="stencilWriteMask">The portion of the stencil buffer used for writing.</param>
            <param name="stencilReference">The reference value to use when doing a stencil test.</param>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.DepthTestEnabled">
            <summary>
            Gets or sets whether depth testing is enabled.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.DepthWriteEnabled">
            <summary>
            Gets or sets whether new depth values are written to the depth buffer.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.DepthComparison">
            <summary>
            Gets or sets the <see cref="T:BEditor.Graphics.ComparisonKind"/> used when considering new depth values.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.StencilWriteMask">
            <summary>
            Gets or sets the portion of the stencil buffer used for writing.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.StencilReference">
            <summary>
            Gets or sets the reference value to use when doing a stencil test.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.StencilBack">
            <summary>
            Gets or sets how stencil tests are handled for pixels whose surface faces away from the camera.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.StencilFront">
            <summary>
            Gets or sets how stencil tests are handled for pixels whose surface faces towards the camera.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.StencilTestEnabled">
            <summary>
            Gets or sets whether the stencil test is enabled.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.DepthStencilState.StencilReadMask">
            <summary>
            Gets or sets the portion of the stencil buffer used for reading.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.op_Equality(BEditor.Graphics.DepthStencilState,BEditor.Graphics.DepthStencilState)">
            <summary>
            Compares two <see cref="T:BEditor.Graphics.DepthStencilState"/>. The result specifies whether the values of the two <see cref="T:BEditor.Graphics.DepthStencilState"/> are equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.DepthStencilState"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.DepthStencilState"/> to compare.</param>
            <returns>true if the left and right <see cref="T:BEditor.Graphics.DepthStencilState"/> structures are equal; otherwise, false.</returns>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.op_Inequality(BEditor.Graphics.DepthStencilState,BEditor.Graphics.DepthStencilState)">
            <summary>
            Determines whether or not the specified <see cref="T:BEditor.Graphics.DepthStencilState"/> is not equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.DepthStencilState"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.DepthStencilState"/> to compare.</param>
            <returns>True if the left and right <see cref="T:BEditor.Graphics.DepthStencilState"/> are different, false otherwise.</returns>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.Equals(BEditor.Graphics.DepthStencilState)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.WithDepth(System.Boolean,System.Boolean,BEditor.Graphics.ComparisonKind)">
            <summary>
            Sets the depth test.
            </summary>
            <param name="depthTestEnabled">Whether depth testing is enabled.</param>
            <param name="depthWriteEnabled">Whether new depth values are written to the depth buffer.</param>
            <param name="comparisonKind">The <see cref="T:BEditor.Graphics.ComparisonKind"/> used when considering new depth values.</param>
            <returns>A new instance created by this method.</returns>
        </member>
        <member name="M:BEditor.Graphics.DepthStencilState.WithStencil(System.Boolean,BEditor.Graphics.StencilBehavior,BEditor.Graphics.StencilBehavior,System.Byte,System.Byte,System.UInt32)">
            <summary>
            Sets the stencil test.
            </summary>
            <param name="stencilTestEnabled">Whether the stencil test is enabled.</param>
            <param name="stencilFront">How stencil tests are handled for pixels whose surface faces towards the camera.</param>
            <param name="stencilBack">How stencil tests are handled for pixels whose surface faces away from the camera.</param>
            <param name="stencilReadMask">The portion of the stencil buffer used for reading.</param>
            <param name="stencilWriteMask">The portion of the stencil buffer used for writing.</param>
            <param name="stencilReference">The reference value to use when doing a stencil test.</param>
            <returns>A new instance created by this method.</returns>
        </member>
        <member name="T:BEditor.Graphics.Material">
            <summary>
            Represents a <see cref="T:BEditor.Graphics.Drawable"/> material structure.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Material.#ctor(BEditor.Drawing.Color,BEditor.Drawing.Color,BEditor.Drawing.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Material"/> struct.
            </summary>
            <param name="ambient">The ambient color.</param>
            <param name="diffuse">The diffuse color.</param>
            <param name="specular">The specular color.</param>
            <param name="shininess">The shininess.</param>
        </member>
        <member name="P:BEditor.Graphics.Material.Ambient">
            <summary>
            Gets the ambient color.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Material.Diffuse">
            <summary>
            Gets the diffuse color.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Material.Specular">
            <summary>
            Gets the specular color.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Material.Shininess">
            <summary>
            Gets the shininess.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Material.op_Equality(BEditor.Graphics.Material,BEditor.Graphics.Material)">
            <summary>
            Compares two <see cref="T:BEditor.Graphics.Material"/>. The result specifies whether the values of the two <see cref="T:BEditor.Graphics.Material"/> are equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.Material"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.Material"/> to compare.</param>
            <returns>true if the left and right <see cref="T:BEditor.Graphics.Material"/> structures are equal; otherwise, false.</returns>
        </member>
        <member name="M:BEditor.Graphics.Material.op_Inequality(BEditor.Graphics.Material,BEditor.Graphics.Material)">
            <summary>
            Determines whether or not the specified <see cref="T:BEditor.Graphics.Material"/> is not equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.Material"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.Material"/> to compare.</param>
            <returns>True if the left and right <see cref="T:BEditor.Graphics.Material"/> are different, false otherwise.</returns>
        </member>
        <member name="M:BEditor.Graphics.Material.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.Material.Equals(BEditor.Graphics.Material)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.Material.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Graphics.RasterizerState">
            <summary>
            A <see cref="T:BEditor.Graphics.GraphicsContext"/> component describing the properties of the rasterizer.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.RasterizerState.Default">
            <summary>
            Describes the default rasterizer state, with clockwise backface culling, solid polygon filling, and both depth
            clipping and scissor tests enabled.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.RasterizerState.CullNone">
            <summary>
            Describes a rasterizer state with no culling, solid polygon filling, and both depth clipping and scissor tests enabled.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.RasterizerState.#ctor(BEditor.Graphics.FaceCullMode,BEditor.Graphics.PolygonFillMode,BEditor.Graphics.FrontFace,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.RasterizerState"/> struct.
            </summary>
            <param name="cullMode">Controls which face will be culled.</param>
            <param name="fillMode">Controls how the rasterizer fills polygons.</param>
            <param name="frontFace">Controls the winding order used to determine the front face of primitives.</param>
            <param name="depthClipEnabled">Controls whether depth clipping is enabled.</param>
            <param name="scissorTestEnabled">Controls whether the scissor test is enabled.</param>
        </member>
        <member name="P:BEditor.Graphics.RasterizerState.CullMode">
            <summary>
            Gets or sets which face will be culled.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.RasterizerState.FillMode">
            <summary>
            Gets or sets how the rasterizer fills polygons.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.RasterizerState.FrontFace">
            <summary>
            Gets or sets the winding order used to determine the front face of primitives.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.RasterizerState.DepthClipEnabled">
            <summary>
            Gets or sets whether depth clipping is enabled.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.RasterizerState.ScissorTestEnabled">
            <summary>
            Gets or sets whether the scissor test is enabled.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.RasterizerState.op_Equality(BEditor.Graphics.RasterizerState,BEditor.Graphics.RasterizerState)">
            <summary>
            Compares two <see cref="T:BEditor.Graphics.RasterizerState"/>. The result specifies whether the values of the two <see cref="T:BEditor.Graphics.RasterizerState"/> are equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.RasterizerState"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.RasterizerState"/> to compare.</param>
            <returns>true if the left and right <see cref="T:BEditor.Graphics.RasterizerState"/> structures are equal; otherwise, false.</returns>
        </member>
        <member name="M:BEditor.Graphics.RasterizerState.op_Inequality(BEditor.Graphics.RasterizerState,BEditor.Graphics.RasterizerState)">
            <summary>
            Determines whether or not the specified <see cref="T:BEditor.Graphics.RasterizerState"/> is not equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.RasterizerState"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.RasterizerState"/> to compare.</param>
            <returns>True if the left and right <see cref="T:BEditor.Graphics.RasterizerState"/> are different, false otherwise.</returns>
        </member>
        <member name="M:BEditor.Graphics.RasterizerState.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.RasterizerState.Equals(BEditor.Graphics.RasterizerState)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.RasterizerState.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Graphics.StencilBehavior">
            <summary>
            Describes how stencil tests are performed in a depth-stencil state.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.StencilBehavior.#ctor(BEditor.Graphics.StencilOperation,BEditor.Graphics.StencilOperation,BEditor.Graphics.StencilOperation,BEditor.Graphics.ComparisonKind)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.StencilBehavior"/> struct.
            </summary>
            <param name="fail">The operation performed on samples that fail the stencil test.</param>
            <param name="pass">The operation performed on samples that pass the stencil test.</param>
            <param name="depthFail">The operation performed on samples that pass the stencil test but fail the depth test.</param>
            <param name="comparison">The comparison operator used in the stencil test.</param>
        </member>
        <member name="P:BEditor.Graphics.StencilBehavior.Fail">
            <summary>
            Gets or sets the operation performed on samples that fail the stencil test.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.StencilBehavior.Pass">
            <summary>
            Gets or sets the operation performed on samples that pass the stencil test.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.StencilBehavior.DepthFail">
            <summary>
            Gets or sets the operation performed on samples that pass the stencil test but fail the depth test.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.StencilBehavior.Comparison">
            <summary>
            Gets or sets the comparison operator used in the stencil test.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.StencilBehavior.op_Equality(BEditor.Graphics.StencilBehavior,BEditor.Graphics.StencilBehavior)">
            <summary>
            Compares two <see cref="T:BEditor.Graphics.StencilBehavior"/>. The result specifies whether the values of the two <see cref="T:BEditor.Graphics.StencilBehavior"/> are equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.StencilBehavior"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.StencilBehavior"/> to compare.</param>
            <returns>true if the left and right <see cref="T:BEditor.Graphics.StencilBehavior"/> structures are equal; otherwise, false.</returns>
        </member>
        <member name="M:BEditor.Graphics.StencilBehavior.op_Inequality(BEditor.Graphics.StencilBehavior,BEditor.Graphics.StencilBehavior)">
            <summary>
            Determines whether or not the specified <see cref="T:BEditor.Graphics.StencilBehavior"/> is not equal.
            </summary>
            <param name="left">A <see cref="T:BEditor.Graphics.StencilBehavior"/> to compare.</param>
            <param name="right">A <see cref="T:BEditor.Graphics.StencilBehavior"/> to compare.</param>
            <returns>True if the left and right <see cref="T:BEditor.Graphics.StencilBehavior"/> are different, false otherwise.</returns>
        </member>
        <member name="M:BEditor.Graphics.StencilBehavior.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.StencilBehavior.Equals(BEditor.Graphics.StencilBehavior)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Graphics.StencilBehavior.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Graphics.Transform">
            <summary>
            Represents the transformation matrix.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.Transform.Zero">
            <summary>
            Represents the zero-filled value of <see cref="T:BEditor.Graphics.Transform"/>.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.Transform.Default">
            <summary>
            Represents the default value of <see cref="T:BEditor.Graphics.Transform"/>.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Transform.#ctor(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.Transform"/> struct.
            </summary>
            <param name="coord">The coordinates.</param>
            <param name="center">The center coordinates.</param>
            <param name="rotate">The rotation.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="P:BEditor.Graphics.Transform.Coordinate">
            <summary>
            Gets or sets the coordinates.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Transform.Center">
            <summary>
            Gets or sets the center coordinates.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Transform.Rotate">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Transform.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Transform.Matrix">
            <summary>
            Gets the matrix.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Transform.op_Addition(BEditor.Graphics.Transform,BEditor.Graphics.Transform)">
            <summary>
            Adds two specified <see cref="T:BEditor.Graphics.Transform"/> instances.
            </summary>
            <param name="left">The first time interval to add.</param>
            <param name="right">The second time interval to add.</param>
            <returns>An object whose value is the sum of the values of <paramref name="left"/> and <paramref name="right"/>.</returns>
        </member>
        <member name="T:BEditor.Graphics.VertexPositionTexture">
            <summary>
            Represents the vertex position of the texture.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.VertexPositionTexture.PosX">
            <summary>
            The x coordinate position.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.VertexPositionTexture.PosY">
            <summary>
            The y coordinate position.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.VertexPositionTexture.PosZ">
            <summary>
            The z coordinate position.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.VertexPositionTexture.TexU">
            <summary>
            The x coordinate position of the texture.
            </summary>
        </member>
        <member name="F:BEditor.Graphics.VertexPositionTexture.TexV">
            <summary>
            The y coordinate position of the texture.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.VertexPositionTexture.#ctor(System.Numerics.Vector3,System.Numerics.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:BEditor.Graphics.VertexPositionTexture"/> struct.
            </summary>
            <param name="pos">The coordinate.</param>
            <param name="uv">The uv coordinate.</param>
        </member>
        <member name="M:BEditor.Graphics.VertexPositionTexture.Enumerate">
            <summary>
            Enumerates the fields of this structure.
            </summary>
            <returns>Returns the fields.</returns>
        </member>
        <member name="T:BEditor.Graphics.Texture">
            <summary>
            Represents an texture.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Texture.Width">
            <summary>
            Gets the width of this <see cref="T:BEditor.Graphics.Texture"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Texture.Height">
            <summary>
            Gets the height of this <see cref="T:BEditor.Graphics.Texture"/>.
            </summary>
        </member>
        <member name="P:BEditor.Graphics.Texture.Vertices">
            <summary>
            Gets the vertices of this <see cref="T:BEditor.Graphics.Texture"/>.
            </summary>
        </member>
        <member name="M:BEditor.Graphics.Texture.FromImage(BEditor.Drawing.Image{BEditor.Drawing.Pixel.BGRA32},BEditor.Graphics.VertexPositionTexture[])">
            <summary>
            Create a texture from an <see cref="T:BEditor.Drawing.Image`1"/>.
            </summary>
            <param name="image">The image to create texture.</param>
            <param name="vertices">The vertices.</param>
            <returns>Returns the texture created by this method.</returns>
        </member>
        <member name="M:BEditor.Graphics.Texture.ToImage">
            <summary>
            Converts this texture to an image.
            </summary>
            <returns>Returns the image.</returns>
        </member>
        <member name="M:BEditor.Graphics.Texture.Update(BEditor.Drawing.Image{BEditor.Drawing.Pixel.BGRA32},System.Boolean)">
            <summary>
            Updates this texture.
            </summary>
            <param name="image">The image.</param>
            <param name="updateVertices">Update Vertices if the image size is different from the original size.</param>
        </member>
        <member name="M:BEditor.Graphics.Texture.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
    </members>
</doc>
